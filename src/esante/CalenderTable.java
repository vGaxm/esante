/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package esante;

import java.awt.Color;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author ixlam
 */
public class CalenderTable extends JTable {

    /**
     * Creates new form CalanderTable
     */
    
 
    int year, month, fday;
    
    Calender cal;
    
    public CalenderTable() {
        initComponents();
        now();
    }
    
    public void setCalender(Calender cal) {
        this.cal = cal;
    }
    
    public void now() {
        updateCalendar(java.util.Calendar.getInstance());
    }
    
    public void updateCalendar(java.util.Calendar c) {
        year = c.get(java.util.Calendar.YEAR);
        month = c.get(java.util.Calendar.MONTH);
        c.set(java.util.Calendar.DAY_OF_MONTH, 1);
        fday = c.get(java.util.Calendar.DAY_OF_WEEK) - 1;      
    }
    
    private String stringOfDate(Date date) {
        return date.getYear() + "-" + date.getMonth() + "-" + date.getDate();
    }
    
    @Override
    public TableCellRenderer getCellRenderer(int row, int column) {
        java.util.Calendar now = java.util.Calendar.getInstance();
        now.set(year, month, 1, 0, 0, 0);
        int day = row * 7 + column - fday;
        now.add(java.util.Calendar.DAY_OF_MONTH, day);
        int newMonth = now.get(java.util.Calendar.MONTH);
        boolean old = newMonth != month;
        Date date = now.getTime();
        Reservation res = cal != null ? cal.getReservation(date) : null;
        CalenderCell cell = new CalenderCell(this,Integer.toString(now.get(java.util.Calendar.DAY_OF_MONTH)), date, old, res);
        if(res != null)
        for (CalenderEvent ev : cal.ce)
            ev.OnReserved(cell, cal.getReservation(date));
        return cell;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "D", "L", "M", "M", "J", "V", "S"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        setCellSelectionEnabled(true);
        setRowHeight(50);
        setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        setShowGrid(true);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
